detector_simulation - a program thath is meant to simulate a Geiger counter. The user first specifies all the parameters of the radiation and detector. It is very important that the button "Save pars" is clicked otherwise the app crashes. After a random source can be generated or a user can input something. After this is also saved (x, y) coordinates can be put into the program and it will return the dose speed and its uncertiantty at this position.

findSource2.0 - the GUI that could eventually be used practically. Here the user specifies the amount of measurements and the progrem generates a path through the plain where the measurements must be made. The user makes the measurements at each position (without practical equipment this can be simulated with the use of the detector_GUI.py), moving forwar or backwards through the generated path by pressing the "next" or "back" buttons. After that the source location is estimated. The path is always zig-zag and the number of measurements MUST be the the square of a natural number.
NOTE: befor estimating the source it is good to close the program and open it again. This way the measurements are saved. There is a chance that the program crashes when trying to estimate the source location. If this happens before the user closes the program manaully the measurements will not be saved.

simulations - a GUI that represents the completely simulated zizag and spiral flyover. The user can choose one of the flyover methods. Than they can select a specific or random source and use the selected method to estimate the source location. They can also plot a graph.